@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
    国控点日均值
*@
@{
}
<div class="table-responsive">
    <p>
        <div class="form-group col-md-2">
            <div class="date-picker-container">
                <button id="dayBack">Day Back</button>
                <input type="date" name="datePicker" id="datePicker">
                <button id="dayForward">Day Forward</button>
            </div>

        </div>
        <button type="button" class="btn btn-primary" id="get_davgdata">获取数据</button>
        <button type="button" class="btn btn-default">控制</button>
    </p>
    <table class="table table-striped table-sm" id="davgdataTable">
        <thead>
            <tr>
                <th>测点</th>
                <th>日期</th>
                <th>PM<sub>2.5</sub></th>
                <th>PM<sub>10</sub></th>
                <th>NO<sub>2</sub></th>
                <th>SO<sub>2</sub></th>
                <th>O<sub>3</sub></th>
                <th>CO</th>
                <th>AQI</th>
                <th>空气质量</th>
                <th>首要污染物</th>
                <th>超标污染物</th>
            </tr>
        </thead>
    </table>
</div>


@section Scripts{
    <script>
        $("#get_davgdata").click(function () {
            //get_davgdata();
            $.post("/action/get_davgdata",
                {
                    date: $("#datePicker").val()
                },
                function (data) {
                    $("#davgdataTable  tr:not(:first)").html("");
                    for (var i = 0; i < data.length; i++) {
                        var index = i + 1;
                        $("#davgdataTable").append(
                            "<tr><td>"
                            + data[i].PositionName + "</td><td>"
                            + data[i].Date + "</td><td>"
                            + data[i].result_PM25 + "</td><td>"
                            + data[i].result_PM10 + "</td><td>"
                            + data[i].result_NO2 + "</td><td>"
                            + data[i].result_SO2 + "</td><td>"
                            + data[i].result_O3 + "</td><td>"
                            + data[i].result_CO + "</td><td>"
                            + data[i].result_AQI + "</td><td>"
                            + data[i].result_Level + "</td><td>"
                            + convertToSubscript(data[i].PrimaryPollutant) + "</td><td>"
                            + convertToSubscript(data[i].OverPollutant) + "</td><td>"
                        );
                    }
                });
        });

        document.addEventListener('DOMContentLoaded', function () {
            const datePicker = document.getElementById('datePicker');
            const dayBack = document.getElementById('dayBack');
            const dayForward = document.getElementById('dayForward');

            // Set the date picker value to yesterday's date
            const currentDate = new Date();
            currentDate.setDate(currentDate.getDate() - 1);
            datePicker.valueAsDate = currentDate;
            

            // Function to add or subtract days from the date
            function adjustDate(days) {
                let currentDate = datePicker.valueAsDate;
                currentDate.setDate(currentDate.getDate() + days);
                datePicker.valueAsDate = currentDate;
            }

            // Event listener for day back button
            dayBack.addEventListener('click', function () {
                adjustDate(-1);
            });

            // Event listener for day forward button
            dayForward.addEventListener('click', function () {
                adjustDate(1);
            });
        });

        function convertToSubscript(text) {
            if (text == null) {
                return "";
            }
            // Define a regular expression to match the patterns
            const subscriptPatterns = {
                'PM2.5': 'PM<sub>2.5</sub>',
                'PM2_5': 'PM<sub>2.5</sub>',
                'PM10': 'PM<sub>10</sub>',
                'NO2': 'NO<sub>2</sub>',
                'SO2': 'SO<sub>2</sub>',
                'O3': 'O<sub>3</sub>'
            };

            // Replace each pattern with its subscript version
            Object.keys(subscriptPatterns).forEach((pattern) => {
                text = text.replace(new RegExp(pattern, 'g'), subscriptPatterns[pattern]);
            });

            return text;
        }

    </script>
}